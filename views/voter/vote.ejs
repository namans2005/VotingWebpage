<div class="min-h-[calc(100vh-4rem)] flex items-center justify-center">
    <div class="max-w-lg w-full space-y-8 p-8">
        <div class="text-center">
            <h2 class="mt-6 text-3xl font-extrabold text-gray-900">
                <%= election.title %>
            </h2>
            <p class="mt-2 text-sm text-gray-600">
                Position: <%= election.position %>
            </p>
        </div>
        
        <form id="voteForm" class="mt-8 space-y-6">
            <div class="space-y-4">
                <% candidates.forEach(candidate => { %>
                    <div class="flex items-center">
                        <input id="candidate-<%= candidate.id %>" 
                               name="candidateId" 
                               type="radio" 
                               value="<%= candidate.id %>"
                               required
                               class="h-4 w-4 text-indigo-600 focus:ring-indigo-500 border-gray-300">
                        <label for="candidate-<%= candidate.id %>" 
                               class="ml-3 block text-sm font-medium text-gray-700">
                            <%= candidate.name %>
                        </label>
                    </div>
                <% }) %>
            </div>

            <div id="message" class="hidden text-center py-2 px-4 rounded-md"></div>

            <div>
                <button type="submit"
                        class="group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-green-600 hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500">
                    Cast Vote
                </button>
            </div>
        </form>
    </div>
</div>

<%- contentFor('scripts') %>
<script>
document.getElementById('voteForm').addEventListener('submit', async (e) => {
    e.preventDefault();
    const formData = new FormData(e.target);
    const candidateId = formData.get('candidateId');
    
    try {
        const response = await fetch('/voter/cast-vote', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ candidateId })
        });
        
        const result = await response.json();
        const messageDiv = document.getElementById('message');
        
        if (result.success) {
            messageDiv.className = 'text-green-600 text-center py-2 px-4 rounded-md bg-green-50';
            messageDiv.textContent = 'Vote cast successfully!';
            e.target.style.display = 'none';
        } else {
            messageDiv.className = 'text-red-600 text-center py-2 px-4 rounded-md bg-red-50';
            messageDiv.textContent = result.error || 'Error casting vote';
        }
        messageDiv.classList.remove('hidden');
    } catch (error) {
        const messageDiv = document.getElementById('message');
        messageDiv.className = 'text-red-600 text-center py-2 px-4 rounded-md bg-red-50';
        messageDiv.textContent = 'Error casting vote: ' + error.message;
        messageDiv.classList.remove('hidden');
    }
});
</script>
